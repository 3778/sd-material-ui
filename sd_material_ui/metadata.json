{
  "src/lib/components/Drawer.react.js": {
    "description": "",
    "displayName": "Drawer",
    "methods": [],
    "props": {
      "anchor": {
        "required": false,
        "flowType": {
          "name": "string"
        },
        "description": "Controls where the drawer appears. Must be one of \"top\", \"bottom\", \"left\", or \"right\"\nDefaults to \"left\"",
        "defaultValue": {
          "value": "\"left\"",
          "computed": false
        }
      },
      "id": {
        "required": true,
        "flowType": {
          "name": "string"
        },
        "description": "Dialog ID"
      },
      "children": {
        "required": false,
        "flowType": {
          "name": "Node"
        },
        "description": "Children to render inside of the Dialog",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "className": {
        "required": false,
        "flowType": {
          "name": "string"
        },
        "description": "CSS class name of the root element",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "open": {
        "required": false,
        "flowType": {
          "name": "boolean"
        },
        "description": "Is the drawer open?\n\nIMPORTANT: When using this component in Dash, a listener must be set up (either as state or\nan input) for this component's props.open value in order to achieve the desired behavior.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "setProps": {
        "required": false,
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "(props: { modal?: boolean, open?: boolean }) => void",
          "signature": {
            "arguments": [
              {
                "name": "props",
                "type": {
                  "name": "signature",
                  "type": "object",
                  "raw": "{ modal?: boolean, open?: boolean }",
                  "signature": {
                    "properties": [
                      {
                        "key": "modal",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      },
                      {
                        "key": "open",
                        "value": {
                          "name": "boolean",
                          "required": false
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "return": {
              "name": "void"
            }
          }
        },
        "description": "Dash callback to update props on the server",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/RadioButtonGroup.react.js": {
    "description": "",
    "displayName": "RadioButtonGroup",
    "methods": [
      {
        "name": "buildRadioButton",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "buttonItem",
            "type": {
              "name": "signature",
              "type": "object",
              "raw": "{\n    /** If true, the radio button is disabled */\n  disabled?: boolean,\n  /** Label to appear next to button */\n  label?: string,\n  /** Specify the location of the label relative to the radio button\n   * Must be one of: \"top\", \"start\", \"bottom\", or \"end\". Defaults to \"end\" */\n  labelPlacement?: string,\n  /** value of the the radio button */\n  value?: any,\n}",
              "signature": {
                "properties": [
                  {
                    "key": "disabled",
                    "value": {
                      "name": "boolean",
                      "required": false
                    }
                  },
                  {
                    "key": "label",
                    "value": {
                      "name": "string",
                      "required": false
                    }
                  },
                  {
                    "key": "labelPlacement",
                    "value": {
                      "name": "string",
                      "required": false
                    }
                  },
                  {
                    "key": "value",
                    "value": {
                      "name": "any",
                      "required": false
                    }
                  }
                ]
              },
              "alias": "SD_RADIO_BUTTON"
            }
          }
        ],
        "returns": null
      },
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "type": {
              "name": "Object",
              "alias": "Object"
            }
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "className": {
        "required": false,
        "flowType": {
          "name": "string"
        },
        "description": "the css class name of the root element",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "classNameRoot": {
        "required": false,
        "flowType": {
          "name": "string"
        },
        "description": "The classname for the root elements of each individual radio button",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "fireEvent": {
        "required": false,
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "() => void",
          "signature": {
            "arguments": [],
            "return": {
              "name": "void"
            }
          }
        },
        "description": "a callback for firng events to dash",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "id": {
        "required": true,
        "flowType": {
          "name": "string"
        },
        "description": "the element's ID"
      },
      "name": {
        "required": true,
        "flowType": {
          "name": "string"
        },
        "description": "the name that will be applied to the group of radio buttons"
      },
      "options": {
        "required": false,
        "flowType": {
          "name": "Array",
          "elements": [
            {
              "name": "signature",
              "type": "object",
              "raw": "{\n    /** If true, the radio button is disabled */\n  disabled?: boolean,\n  /** Label to appear next to button */\n  label?: string,\n  /** Specify the location of the label relative to the radio button\n   * Must be one of: \"top\", \"start\", \"bottom\", or \"end\". Defaults to \"end\" */\n  labelPlacement?: string,\n  /** value of the the radio button */\n  value?: any,\n}",
              "signature": {
                "properties": [
                  {
                    "key": "disabled",
                    "value": {
                      "name": "boolean",
                      "required": false
                    }
                  },
                  {
                    "key": "label",
                    "value": {
                      "name": "string",
                      "required": false
                    }
                  },
                  {
                    "key": "labelPlacement",
                    "value": {
                      "name": "string",
                      "required": false
                    }
                  },
                  {
                    "key": "value",
                    "value": {
                      "name": "any",
                      "required": false
                    }
                  }
                ]
              }
            }
          ],
          "raw": "Array<SD_RADIO_BUTTON>"
        },
        "description": "used to create the RadioButtons to populate the RadioButtonGroup with. A Dash user passes in a\nlist of dict items, each one having at least a `value` and `label`. If that value is selected,\nvalueSelected will be updated",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "setProps": {
        "required": false,
        "flowType": {
          "name": "signature",
          "type": "function",
          "raw": "() => void",
          "signature": {
            "arguments": [],
            "return": {
              "name": "void"
            }
          }
        },
        "description": "dash callback to update props on the server",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "valueSelected": {
        "required": true,
        "flowType": {
          "name": "string"
        },
        "description": "Initial value selected"
      }
    }
  }
}